<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CS 841 Homepage (Fall 2023)</title>
    <link>https://f23.vandv.santoslab.org/</link>
    <description>Recent content on CS 841 Homepage (Fall 2023)</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <atom:link href="https://f23.vandv.santoslab.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>https://f23.vandv.santoslab.org/bio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://f23.vandv.santoslab.org/bio/</guid>
      <description>John Hatcliff &amp;ndash; Bio Sketch Bio Sketch - To be Completed</description>
    </item>
    <item>
      <title></title>
      <link>https://f23.vandv.santoslab.org/lectures/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://f23.vandv.santoslab.org/lectures/</guid>
      <description>Lectures Lecture content utilizes the Software Correctness Online Course Notes&#xA;Course Administration Slides Overview and Background Slang and Logika Overview&#xA;Online course notes - Slang and Logika Overview Video overview of Slang and Logika Foundations of Reasoning about Programs Basics&#xA;Online course notes Examples Conditionals&#xA;Methods&#xA;Loops&#xA;Arrays / Sequences&#xA;Termination&#xA;Software Development Background The Software Development Process&#xA;Slides Concept Summary Resources: FAA Requirements Engineering Management Handbook Software Process Diagrams and Steps (from California Deparment of Transportation) Testing Infrastructure and Terminology Background Unit Testing in Scalatest and JUnit</description>
    </item>
    <item>
      <title></title>
      <link>https://f23.vandv.santoslab.org/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://f23.vandv.santoslab.org/overview/</guid>
      <description>Overview This course covers advanced techniques for Software Verification (demonstrating that software meets is requirements) and Validation (demonstrating that software meets the expectations of the end-user). Verification techniques focus on automated deduction and testing. Topics related to automated deduction include applying tools that use industry-developed SMT-solvers like Microsoft&amp;rsquo;s Z3 to perform deep learning of a program&amp;rsquo;s behavior and automated checking of the discovered behavior against developer-friendly specifications with an underlying logic foundation.</description>
    </item>
    <item>
      <title></title>
      <link>https://f23.vandv.santoslab.org/project/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://f23.vandv.santoslab.org/project/</guid>
      <description>Project This year the course project will involve specifying and verifying the software of two medical devices:&#xA;An &amp;ldquo;Isolette&amp;rdquo; (infant incubator) - the medical goal of the Isolette is to keep a new-born baby at an appropriate temperature for the first hours of its life by placing it in an enclosure in which the air in the enclosure can be monitored and controlled. A Patient-Controlled Analgesic (PCA) Pump - the medical goal of a PCA pump is to provide a hospital patient with pain relief by intravenously infusing opioids at intervals partially controlled by a patient.</description>
    </item>
    <item>
      <title></title>
      <link>https://f23.vandv.santoslab.org/syllabus/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://f23.vandv.santoslab.org/syllabus/</guid>
      <description>Syllabus CS 841: Verification and Validation, Fall 2023&#xA;Purpose This course covers advanced techniques for Software Verification (demonstrating that software meets is requirements) and Validation (demonstrating that software meets the expectations of the end-user). Verification techniques focus on automated deduction and testing. Topics related to automated deduction include applying tools that use industry-developed SMT-solvers like Microsoft’s Z3 to perform deep learning of a program’s behavior and automated checking of the discovered behavior against developer-friendly specifications with an underlying logic foundation.</description>
    </item>
    <item>
      <title></title>
      <link>https://f23.vandv.santoslab.org/tools/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://f23.vandv.santoslab.org/tools/</guid>
      <description>Tools This course will use the following tools, which students should have installed on laptops that can be brought to class for in-class exercises.&#xA;Sireum&#xA;Sireum is a programming language, software engineering, and formal methods framework developed at Kansas State University. This class will use Slang (the Sireum programming Language) and Logika (an automated SMT-based verification environment for Slang)&#xA;Download and installation instructions &amp;ndash; installation based on git sources is recommended Video overview of Slang and Logika </description>
    </item>
  </channel>
</rss>
